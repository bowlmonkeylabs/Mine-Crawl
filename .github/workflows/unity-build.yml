name: Build actions ðŸ˜Ž

on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          token: ${{ secrets.REPOS_ACCESS_TOKEN }}

      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      # Git annex
      - name: Install git-annex
        run: |
          sudo apt-get update
          sudo apt-get install git-annex
          
      - name: Clone unversioned repo
        uses: actions/checkout@master
        with:
          repository: ${{ github.repository }}-Unversioned
          path: Assets/Unversioned
          token: ${{ secrets.REPOS_ACCESS_TOKEN }}
          
      - name: Cache unversioned
        id: cache-unversioned
        uses: actions/cache@v2
        with:
          path: Assets/Unversioned
          key: ${{ runner.os }}-UnversionedAssets-${{ hashFiles('Assets/Unversioned/.git/annex/index') }}
          
      - name: Sync unversioned annex
        run: |
          cd Assets/Unversioned
          git config user.email "bowlmonkeylabs@gmail.com"
          git config user.name bowlmonkeylabs
          git annex init ${{ runner.os }}
          git annex sync --content
          git annex unlock
          cd ../..

      # Unity cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
#       - name: Run tests
#         uses: game-ci/unity-test-runner@v2
#         env:
#           UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#         with:
#           githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
